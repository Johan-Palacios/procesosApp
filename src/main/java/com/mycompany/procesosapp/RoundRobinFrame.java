/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.procesosapp;

import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author johan
 */
public class RoundRobinFrame extends javax.swing.JFrame {
  ArrayList<Proceso> pList = new ArrayList<Proceso>();
  DefaultTableModel processModel;
  DefaultTableModel roundRobinModel;

  /** Creates new form RoundRobinFrame */
  public RoundRobinFrame() {
    initComponents();
    processModel =
        new DefaultTableModel(new Object[][] {}, new String[] {"Nombre proceso", "Tiempo Proceso"});
    roundRobinModel =
        new DefaultTableModel(new Object[][] {}, new String[] {"Proceso", "Tiempo CPU", "TE"});
    tblProcesos.setModel(processModel);
    tblRoundRobin.setModel(roundRobinModel);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtProceso = new javax.swing.JTextField();
        btnAgregarProceso = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcesos = new javax.swing.JTable();
        btnStartRR = new javax.swing.JButton();
        lblQuantum = new javax.swing.JLabel();
        txtQuantum = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRoundRobin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Round Robin");

        jLabel2.setText("Tiempo Proceso");

        txtProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcesoActionPerformed(evt);
            }
        });

        btnAgregarProceso.setText("Agregar Proceso");
        btnAgregarProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProcesoActionPerformed(evt);
            }
        });

        tblProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Nombre Proceso", "Tiempo Proceso"
            }
        ));
        jScrollPane1.setViewportView(tblProcesos);

        btnStartRR.setText("Iniciar RR");
        btnStartRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartRRActionPerformed(evt);
            }
        });

        lblQuantum.setText("Quantum");

        txtQuantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantumActionPerformed(evt);
            }
        });

        tblRoundRobin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblRoundRobin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblQuantum)
                                .addGap(246, 246, 246)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(txtQuantum))
                                    .addComponent(txtProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addComponent(btnAgregarProceso))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(btnStartRR))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblQuantum)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarProceso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnStartRR)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void txtProcesoActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_txtProcesoActionPerformed
  } // GEN-LAST:event_txtProcesoActionPerformed

  private void btnAgregarProcesoActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_btnAgregarProcesoActionPerformed
    try {
      int procesoTiempo = Integer.parseInt(txtProceso.getText());
      Proceso proceso = new Proceso(procesoTiempo, "p" + (int) (pList.size() + 1));
      pList.add(proceso);
      processModel.addRow(new Object[] {proceso.getName(), proceso.getTime()});
      txtProceso.setText("");
    } catch (Exception e) {
    }
  } // GEN-LAST:event_btnAgregarProcesoActionPerformed

  private void btnStartRRActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_btnStartRRActionPerformed
    int quantum;
    try {
      quantum = Integer.parseInt(txtQuantum.getText());
    } catch (Exception e) {
      quantum = 1;
      JOptionPane.showMessageDialog(this, "Error al asignar el Quantum, se usara quantum = 1");
    }

    int TE = 0;
    int lastTE = 0;
    int sumTE = 0;
    int iterations = 0;
    String lastProcessString = "";
    String currentProcessString = "";
    ArrayList<Proceso> rrListProcesos = new ArrayList<Proceso>();
    for (Proceso proceso : pList) {
      rrListProcesos.add(proceso.clone());
    }

    while (rrListProcesos.size() > 0) {
      Iterator<Proceso> iterador = rrListProcesos.iterator();

      while (iterador.hasNext()) {
        Proceso proceso = iterador.next();
        currentProcessString = proceso.getName();
        if (iterations == 0) {
          lastProcessString = currentProcessString;
        }

        if (currentProcessString.equals(lastProcessString) && iterations == 0  && proceso.getTime() < quantum ) {
          TE += 0;
          lastTE = proceso.getTime();
          sumTE += 0;
          proceso.setTime(0);

          roundRobinModel.addRow(new Object[]{proceso.getName(), lastTE, 0});
        }

        else if (currentProcessString.equals(lastProcessString) && iterations == 0  && proceso.getTime() >= quantum ) {
          TE += 0;
          lastTE = quantum;
          sumTE += 0;
          proceso.setTime(proceso.getTime()-quantum);

          roundRobinModel.addRow(new Object[]{proceso.getName(), quantum, 0});
        }

        else if (currentProcessString.equals(lastProcessString) && iterations != 0  && proceso.getTime() >= quantum ) {
          TE += 0;
          lastTE = quantum;
          sumTE += 0;
          proceso.setTime(proceso.getTime()-quantum);

          roundRobinModel.addRow(new Object[]{proceso.getName(), quantum, 0});
        }

        else if (currentProcessString.equals(lastProcessString) && iterations != 0  && proceso.getTime() < quantum ) {

          TE += 0;
          lastTE = proceso.getTime();
          sumTE += 0;
          proceso.setTime(0);

          roundRobinModel.addRow(new Object[]{proceso.getName(), lastTE, 0});
          
          
        }


        else if (proceso.getTime() < quantum ) {

          TE += lastTE;
          lastTE = proceso.getTime();
          sumTE += TE;
          proceso.setTime(0);

          roundRobinModel.addRow(new Object[]{proceso.getName(), lastTE, TE});
          
        }

        else if (proceso.getTime() >= quantum ) {
          TE += lastTE;
          lastTE = quantum;
          sumTE += TE;
          proceso.setTime(proceso.getTime()-quantum);

          roundRobinModel.addRow(new Object[]{proceso.getName(), lastTE, TE});
        }

        if (proceso.getTime() == 0) {
          iterador.remove();
        }
        lastProcessString = currentProcessString;
        iterations++;
      }


    }
    JOptionPane.showMessageDialog(this, "El TE Promedio es de: " + (double) sumTE/ (double) iterations );
  } // GEN-LAST:event_btnStartRRActionPerformed

  private void txtQuantumActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_txtQuantumActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_txtQuantumActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info :
          javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(RoundRobinFrame.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(RoundRobinFrame.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(RoundRobinFrame.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(RoundRobinFrame.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
        new Runnable() {
          public void run() {
            new RoundRobinFrame().setVisible(true);
          }
        });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProceso;
    private javax.swing.JButton btnStartRR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblQuantum;
    private javax.swing.JTable tblProcesos;
    private javax.swing.JTable tblRoundRobin;
    private javax.swing.JTextField txtProceso;
    private javax.swing.JTextField txtQuantum;
    // End of variables declaration//GEN-END:variables
}
